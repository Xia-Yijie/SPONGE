SPONGE Module File
:::Name:::
    md_core
:::Author:::
    夏义杰
:::Description:::
    分子动力学模拟的核心信息和函数
:::Progress:::
    100
:::Category:::
    核心
:::Module Dependency:::
    FILE *out, *trajFile, *vtrajFile, *boxFile;
    CONTROLLER controller;
:::Module File:::
    MD_core/MD_core.cu
:::Module Include:::
    MD_core/MD_core.cuh
    common.cuh
    control.cuh
:::Main Include:::
    #include "MD_core/MD_core.cuh"
:::Main Declaration:::
    MD_INFORMATION md_info;
:::Main Initial Priority:::
    3
    -3
:::Main Initial:::
    md_info.Initial(&controller);
    md_info.Core_Time_Record_Start();
:::Main Before Calculate Force:::
    md_info.MD_Information_Crd_To_Uint_Crd();
    md_info.MD_Information_Copy_Crd_To_New_Crd();
:::Main Calculate Force Priority:::
    3
	-2
:::Main Calculate Force:::
    md_info.MD_Reset_Atom_Energy_And_Virial();
	md_info.MD_Information_Calculate_Pressure_And_Potential_If_Needed();
:::Main Calculate Energy:::

:::Main After Calculate Energy Priority:::
    3
:::Main After Calculate Energy:::
    md_info.h_potential = 0;
:::Main Iteration 2:::
    if (md_info.mode == 0)
    {
        Main_Before_Iteration();
        md_info.MD_Information_Iteration_Leap_Frog();
        Main_After_Iteration();
    }
    if (md_info.mode == -1)
    {
        Main_Before_Iteration();
        md_info.MD_Information_Gradient_Descent();
        Main_After_Iteration();
    }
:::Main After Iteration Priority:::
    0.5
:::Main After Iteration:::
    md_info.Centerize();
:::Main Volume Change Priority:::
    3
:::Main Volume Change:::
    md_info.Update_Volume(factor);
:::Main Print Priority:::
    3
    3
    3
    -3
:::Main Print:::
    md_info.MD_Information_Temperature();
    md_info.MD_Information_Temperature_Device_To_Host();
    sprintf(controller.out_line, "%7d %6.2f %13.2f", md_info.steps, md_info.h_temperature, md_info.h_potential);
    md_info.MD_Information_Crd_Device_To_Host();
    md_info.MD_Information_Vel_Device_To_Host();
    md_info.MD_Export_Information_To_Traj(trajFile);
    if (controller.Command_Exist("v"))
    {
        md_info.MD_Export_Information_To_Velocity_Traj(vtrajFile);
    }
    md_info.MD_Export_Information_To_Rst7(controller.Command("r"));
    md_info.MD_Export_Information_To_BoxFile(boxFile);
:::Main Destroy Priority:::
    3
:::Main Destroy:::
    md_info.Core_Time_Record_End();
    printf("time %f\nspeed %f ns/day\n", md_info.core_time.time, md_info.simulation_speed);
    md_info.MD_Information_Crd_Device_To_Host();
    md_info.MD_Information_Vel_Device_To_Host();
    md_info.MD_Export_Information_To_Rst7(controller.Command("r"));
:::HTML:::
    hint = 程序主要参数设置; tab = 主要; subtab = 主要;
    select = {:} {梯度下降最小化:-1} {NVE:0} {NVT:1} {NPT:2}; nickname = 模式; name = mode; default = NVE;
    up_hint = 程序的运行模式。NVE、NVT、NPT为对应的动力学模拟系综; default = mode;
    
    up_hint = 步长设置，单位为ps<sup>-1</sup>。最小化模式时，梯度下降的学习率为该处“步长”的平方; default = dt;
    input = 浮点数; nickname = 步长; name = dt; default = 0.001;
    
    up_hint = 进行分子模拟的总步数。步长*模拟步数为模拟时间; default = step_limit;
    input = 整数; nickname = 模拟步数; name = step_limit; default = 1000;
    
    up_hint = 程序每隔该设定的步数输出一次程序的信息; default = write_information_interval;
    input = 整数; nickname = 输出间隔; name = write_information_interval; default = 1000;
    
    up_hint = 控温方式。每种控温方式的详细设定见对应的选项页。默认为朗之万控温; default = thermostat;
    select = {:}; nickname = 热浴; name = thermostat; enable = mode {1} {2}; default = 朗之万;
    
    up_hint = 外界热浴的温度，也即体系控温的目标温度。单位为开尔文; default = target_temperature;
    input = 浮点数; nickname = 目标温度; name = target_temperature; enable = mode {1} {2}; default = 300.0;
    
    up_hint = 控压方式。每种控压方式的详细设定见对应的选项页。默认为蒙特卡洛控压; default = barostat;
    select = {:}; nickname = 压浴; name = barostat; enable = mode {2}; default = 蒙特卡洛;

    up_hint = 外界压浴的压强，也即体系控压的目标压强。单位为bar; default = target_pressure;
    input = 浮点数; nickname = 目标压强; name = target_pressure; enable = mode {2}; default = 1.0;

    hint = 基本参数的输入命令
对应的文件格式请参阅手册;
    tab = 主要; subtab = 基本参数;
    
    input = 文件名; nickname = 质量文件; name = mass_in_file;
    
    input = 文件名; nickname = 电荷文件; name = charge_in_file;
    
    input = 文件名; nickname = 残基文件; name = residue_in_file;

    up_hint = 用以兼容AMBER的参数输入输出命令
模拟需要读取的AMBER格式的参数文件名。
如果同时设定了SPONGE本身格式的参数文件，将会优先以SPONGE本身格式的参数文件初始化
如果没有被设定，则不会读取
注意：AMBER的parm文件中不含有虚原子的信息;
        default = amber_parm;
    input = 文件名; name = amber_parm; priority = -1;
          
    hint = 程序控制相关命令; tab = 主要; subtab = 控制;
    
    up_hint = 通常来说，SPONGE会检查每个命令是否都被使用，以免输入错误或其他不希望发生的情况。可以修改此设置使得SPONGE不对此进行检查;
        default = dont_check_input;
    select = {检查:} {不检查:1}; nickname = 输入检查; name = dont_check_input; default=检查; 

    up_hint = 当一台电脑有多台GPU的时候，可以指定其中的一个GPU进行计算
编号从0开始;
        default = device;
    input = 整数; nickname = 使用GPU编号; name = device;

    up_hint = 通常来说，SPONGE会检查每个命令是否都被使用，以免输入错误或其他不希望发生的情况。可以修改此设置使得SPONGE不对此进行检查;
        default = dont_check_input;
    select = {检查:} {不检查:1}; nickname = 输入检查; name = dont_check_input; default=检查;
    
    up_hint = 用以兼容AMBER的坐标/速度输入输出命令
未设定时坐标速度的输入和输出均会以SPONGE格式读取
为0时按AMBER程序的无速度RST7格式读取初始坐标文件，输出有速度的RST7文件
为1时按AMBER程序的有速度RST7格式读取初始坐标文件，输出有速度的RST7文件;
        default = amber_irest;
    select = {:} {0:0} {1:1}; name = amber_irest; 
    
    hint = 坐标与速度输入输出相关命令; tab = 主要; subtab = 坐标速度;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-c"来指定，因为初始文件经常改变
        如果"amber_irest"参数未设定，会以SPONGE格式读取；当"amber_irest"参数设定为0或1时，将以对应的AMBER格式读取
        无默认值;
        default = c;
    input = 文件名; nickname = 初始坐标文件; name = c;
 
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-v0"来指定，因为初始文件经常改变
        如果"amber_irest"参数未设定，会以SPONGE格式读取；当"amber_irest"参数设定为0或1时，此参数无效
        无默认值;
        default = v0;
    input = 文件名; nickname = 初始速度文件; name = v0;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-r"来指定，因为再开始文件经常改变
        如果"amber_irest"参数未设定，会以该参数为前缀，分别以"_coordinate.txt"和"_velocity.txt"为后缀名，保存SPONGE格式的坐标和速度；当"amber_irest"参数设定为0或1时，将会以该参数为名保存AMBER格式的再开始文件
        默认值为"restrt";
        default = r;
    input = 文件名; nickname = 再开始文件; name = r;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-o"来指定，因为输出文件经常改变
        默认值为"mdout";
        default = o;
    input = 文件名; nickname = 输出文件; name = o;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-x"来指定，因为轨迹文件经常改变
        默认值为"mdcrd";
        default = x;
    input = 文件名; nickname = 轨迹文件; name = x;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-vx"来指定，因为轨迹文件经常改变
        如果没有被设定，则不会输出速度轨迹;
        default = vx;
    input = 文件名; nickname = 速度轨迹文件; name = vx;
    
    up_hint = \t不推荐直接在此处设定文件，而是在终端里使用"-box"来指定，因为轨迹文件经常改变
        默认值为"mdbox";
        default = box;
    input = 文件名; nickname = 盒子轨迹文件; name = box;
    

    hint = 固定原子之间的作用势; tab = 力场; subtab = 成键;
    hint = 近邻表及任意原子之间的作用势; tab = 力场; subtab = 非键;
    hint = 约束(constrain)通过将约束条件纳入动力学积分的整体考虑中，对约束条件迭代，使得每步均严格符合约束条件; tab = 约束限制; subtab = 约束;
    select = {不约束:}; nickname = 约束模式; name = constrain_mode; 
    
    up_hint = 描述哪些键需要进行约束的文件; default = constrain_in_file;
    input = 文件名; nickname = 约束文件; name = constrain_in_file; disable = constrain_mode {};
    
    up_hint = 将对质量大于0小于该值的原子的键长和键角进行约束
当未设定"约束文件"参数时，该未设定默认值为3.0
当设定"约束文件"参数时，该未设定默认值为0.0;
    default = constrain_mass;
    input = 浮点数; nickname = 约束原子最大质量; name = constrain_mass; disable = constrain_mode {};
    

    
    