SPONGE Module File
:::Name:::
    quantum
:::Author:::
    夏义杰
:::Description:::
    quantum mechanics interface.
:::Progress:::
    100
:::Category:::
    Python
:::Module Dependency:::
    CONTROLLER controller;
    PYTHON_INFORMATION py_info;
:::Module File:::
    quantum/quantum.cu
:::Module Include:::
    quantum/quantum.cuh
    quantum/bdf.py
    quantum/g09.py
    quantum/pyscf.py
:::Main Include:::
    #include "quantum/quantum.cuh"
:::Main Declaration:::
    QUANTUM_INFORMATION qm_info;
:::Main Initial Priority:::
    -1
:::Main Initial:::
    qm_info.Initial(&controller);
:::HTML:::
    hint = 使用Python接口调用外部量化程序计算; tab = 外部; subtab = 量化;
    
    select = {不启用:} {pyscf:1} {Gaussian:2} {Beijing Density Function:3}; nickname = 量化程序; name = qm_program;
    
    input = 运行外部量化程序的命令行命令; nickname = 量化程序命令; name = qm_command; disable = qm_program {} {1}; 
    up_hint = 使用的外部量化程序的命令行命令
对于pyscf无效，因为pyscf是直接调用Python
对于Gaussian，留白默认值为g09
对于BDF，无默认值。参考值为$BDFHOME/sbin/run.sh
注意：因为是用Python调用shell，不能以~/.bashrc中使用alias等效的命令作为命令行命令; default = qm_command;

    input = 整数; nickname = 量化原子数; name = qm_atoms; disable = qm_program {};
    up_hint = 参与量化计算的原子数目。程序会将最前面的原子进行量化计算。无默认值。必须设定; default = qm_atoms;
    
    input = 字符串; nickname = 量化基组; name = qm_basis; default = 6-31g; disable = qm_program {};
    
    input = 字符串; nickname = 量化方法; name = qm_method; disable = qm_program {};
    up_hint = 量化计算的方法。无默认值。大小写不敏感。必须设定。
对于Gaussian，会直接将该命令的值填入对应的关键字位置，例如“b3lyp”会和基组(此处以"6-31g"为例)处理为关键字"b3lyp/6-31g"
对于pyscf和BDF，优先比对该命令是否为"RHF"、“UHF”和"ROHF"之一，如果是将启用对应的Hatree-Folk方法。对于其他值，如"b3lyp"，则会认为使用dft方法，且对应的xc函数为该处填的值，同时，还需给定对应的Kohn-Sham计算的方法; 
        default = qm_method;
        
    select = {:} {RKS:RKS} {UKS:UKS} {ROKS:ROKS}; nickname = Kohn_Sham方法; name = qm_ks_method; 
        enable = qm_program {1} {3};
        disable = qm_method {RHF} {UHF} {ROHF};
    up_hint = Kohn-Sham计算的方法。只对pyscf和BDF有用，Gaussian直接使用关键字控制
        可以选择限制性闭壳层、限制性开壳层和非限制性开壳层波函数进行计算;
        default = qm_ks_method;
    
    input = 整数; nickname = 量化电荷; name = qm_charge; disable = qm_program {};
    up_hint = 量化计算部分的电荷量，单位为元电荷。无默认值。未设定时，将会通过分子力学中力场电荷计算得出;
        default = qm_charge;
    
    input = 整数; nickname = 量化自旋; name = qm_spin; disable = qm_program {};
    up_hint =量化计算部分的自旋。对于pyscf，该值为2S，默认值为0；
对于Gaussian和BDF，该值为2S+1，默认值为1;
        default = qm_spin;
    
    input = 整数; nickname = 量化最大内存; name = qm_max_memory; disable = qm_program {} {3};
    up_hint = 量化部分最大使用的内存。单位为MB。默认值为1000。对于BDF无效;
        default = qm_max_memory;
    
    input = 字符串; nickname = Gaussian额外关键字; name = qm_extra_key_words; enable = qm_program {2};
    up_hint = 额外的关键字。将原封不动地加入至关键字行中;
        default = qm_extra_key_words;

    input = 字符串; nickname = Gaussian临时文件; name = qm_temp_file_name; enable = qm_program {2};
    up_hint = 高斯临时生成的gjf的文件名。默认值为qm_tmp_file.gjf;
        default = qm_temp_file_name;        
    
    input = 字符串; nickname = BDF临时文件前缀; name = qm_temp_prefix; enable = qm_program {3};
    up_hint = 临时生成的各文件的文件前缀\n默认值为qm_tmp_file;
        default = qm_temp_prefix;       
    